// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model tb_empresa {
  cnpj             Int               @id
  nome             String
  descricao        String?
  imagem_perfil    String?
  senha            String
  Contatos_empresa tb_contatos_empresa?
  email            String            @unique
  Fretes           tb_frete[]
}

model tb_contatos_empresa {
  id        String  @id @default(uuid())
  telefone  Int
  celular   Int?
  facebook  String?
  whatsapp  String?
  linkedin  String?
  telegram  String?
  empresa   tb_empresa @relation(fields: [empresaId], references: [cnpj], onDelete: Cascade)
  empresaId Int     @unique
}

model tb_caminhoneiro {
  cpf            Int              @id
  nome           String
  senha          String
  email          String           @unique
  celular        Int?
  notificacao    Boolean
  carroceria     tc_carroceria       @relation(fields: [carroceriaId], references: [id])
  carroceriaId   String           @unique
  veiculo        tc_veiculo          @relation(fields: [veiculoId], references: [id])
  veiculoId      String           @unique
  Procura_Fretes tb_procura_fretes[]
}

model tb_frete {
  id                       String             @id @default(uuid())
  cidade_origem            String
  cidade_destino           String
  estado_origem            String
  estado_destino           String
  descricao                String?
  forma_pagamento          String?
  produto                  String?
  preco                    String
  peso                     String?
  porcentagem_adiantamento String?
  tipo_carga               String?
  data_postagem            DateTime           @default(now())
  data_coleta              DateTime
  data_entrega             DateTime
  ativo                    Boolean
  agenciamento             Boolean?
  lona                     Boolean?
  pedagio                  Boolean?
  rastreamento             Boolean?
  empresa                  tb_empresa            @relation(fields: [empresaId], references: [cnpj])
  empresaId                Int
  especie                  tc_especie            @relation(fields: [especieId], references: [id])
  especieId                String
  Veiculo_Frete            tb_veiculo_frete[]
  Carroceria_Frete         Carroceria_Frete[]
}

model tb_veiculo_frete {
  id        String  @id @default(uuid())
  veiculo   tc_veiculo @relation(fields: [veiculoId], references: [id])
  veiculoId String
  frete     tb_frete   @relation(fields: [freteId], references: [id])
  freteId   String
}

model Carroceria_Frete {
  id           String     @id @default(uuid())
  carroceria   tc_carroceria @relation(fields: [carroceriaId], references: [id])
  carroceriaId String
  frete        tb_frete      @relation(fields: [freteId], references: [id])
  freteId      String
}

model tb_procura_fretes {
  id             String       @id @default(uuid())
  cidade_origem  String
  cidade_destino String?
  estado_origem  String
  estado_destino String?
  data_inicio    DateTime
  cpf            Int
  caminhoneiro   tb_caminhoneiro @relation(fields: [cpf], references: [cpf])
}

model tc_especie {
  id      String  @id @default(uuid())
  especie String  @unique
  Fretes  tb_frete[]
}

model tc_veiculo {
  id            String          @id @default(uuid())
  veiculo       String          @unique
  Caminhoneiro  tb_caminhoneiro[]
  Veiculo_Frete tb_veiculo_frete[]
}

model tc_carroceria {
  id               String             @id @default(uuid())
  carroceria       String             @unique
  Caminhoneiro     tb_caminhoneiro[]
  Carroceria_Frete Carroceria_Frete[]
}
